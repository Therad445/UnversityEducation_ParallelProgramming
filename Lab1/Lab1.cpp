// Lab1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

/*Задание 1. Написать на C++ программу в соответствии с вариантом задания, при этом программы должны оптимально использовать предлагающиеся вычислительные ресурсы.Для реализации многопоточности использовать технологию OpenMP.Измерять время работы программы для различных значений параметров.Результаты занести в отчёт.Также, при запуске программ, запустить диспетчер задач Windows, в нём установить счётчик потоков, и просмотреть сколько потоков выполнения использует процесс, соответствующий запущенной программе.Результаты также занести в отчёт.

Вариант-7 Исламов

1	Дана матрица из MxN натуральных(ненулевых) элементов(задаются случайно).
Написать программу, считающую количество семёрок в десятеричной записи числа всех попарных сумм элементов для каждой строки.
*/

#include <iostream>
#include <ctime>
#include <omp.h>

using namespace std;

int arr1[10000][10000]; // двумерный массив
int arr2[10000][10000]; // двумерный массив
int i, j, N, M; // счётчики и размеры матрицы
int outR1; // Счётчик вывода
int outR2; // Счётчик вывода


int main()
{
    unsigned int start_time = clock(); // начальное время
    srand(time(0)); // автоматическая рандомизация

    cin >> N; cin >> M; // вводим размеры NxM

    {


        for (i = 0; i < N; i++) {
            for (j = 0; j < M; j++) {
                arr1[i][j] = rand() % 10;    //запись в матрицу случайных чисел от 1 до 9
            }
        }


#pragma omp parallel shared(a) private(i) 
        {
#pragma omp for private(i,arr) 
            {
                for (i = 0; i < N; i += 1) {
                    for (j = 0; j < M; j += 2) {
                        if (arr1[i][j] + arr1[i][j + 1] == 7)
                            outR1 += 1;
                    }
                }
            }
        }
        cout << "Сумма единиц: " << outR1;  //вывод счётчика
        cout << endl;

        unsigned int end_time = clock(); // конечное время
        unsigned int search_time = end_time - start_time; // искомое время

        cout << "Задача выполнена с использованием OpenMP: " << search_time;
        cout << endl;
    }
    {


        for (i = 0; i < N; i++) {
            for (j = 0; j < M; j++) {
                arr2[i][j] = rand() % 10;    //запись в матрицу случайных чисел от 1 до 9
            }
        }


        for (i = 0; i < N; i += 1) {
            for (j = 0; j < M; j += 2) {
                if (arr2[i][j] + arr2[i][j + 1] == 7)
                    outR2 += 1;
            }
        }


        cout << "Сумма единиц: " << outR2;  //вывод счётчика
        cout << endl;

        unsigned int end_time = clock(); // конечное время
        unsigned int search_time = end_time - start_time; // искомое время

        cout << "Задача выполнена без использования OpenMP: " << search_time;
    }
}